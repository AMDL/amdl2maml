<?xml version="1.0" encoding="utf-8"?>
<!-- This document was generated by a tool. -->
<!-- Changes to this file may cause incorrect behavior and will be lost if the code is regenerated. -->
<!-- amdl2maml Version 1.0                  -->
<!-- Copyright © Dmitry Shechtman 2015      -->
<topic id="9d0d5628-0c3f-4774-957c-101597bb8245" revisionNumber="1">
  <developerConceptualDocument xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
    <summary>
      <para>This topic details the AMDL syntax and semantics of <newTerm>fenced code</newTerm> blocks.</para>
    </summary>
    <introduction>
      <autoOutline lead="none" excludeRelatedTopics="true" />
    </introduction>
    <section address="Function">
      <title>Function</title>
      <content>
        <para>TBD</para>
      </content>
    </section>
    <section address="Syntax">
      <title>Syntax</title>
      <content>
        <para>Two fenced code block syntaxes are defined:</para>
      </content>
      <sections>
        <section address="1. :">
          <title>1. <newTerm>Backtick Code Block</newTerm>:</title>
          <content>
            <para>
              <list class="ordered">
                <listItem>
                  <para>a line consisting of</para>
                  <list class="ordered">
                    <listItem>
                      <para>
                        <legacyItalic>n</legacyItalic> <codeInline>`</codeInline> characters where <legacyItalic>n</legacyItalic> ≥ 3, followed by,</para>
                    </listItem>
                    <listItem>
                      <para>optionally, a <legacyItalic>language</legacyItalic> value, followed by,</para>
                    </listItem>
                    <listItem>
                      <para>optionally, an attribute enclosure;</para>
                    </listItem>
                  </list>
                </listItem>
                <listItem>
                  <para>
                    <legacyItalic>fenced code</legacyItalic>, consisting of any number of lines, where each line</para>
                  <list class="ordered">
                    <listItem>
                      <para>does <legacyItalic>not</legacyItalic> start with <legacyItalic>l</legacyItalic> <codeInline>`</codeInline> characters where <legacyItalic>l</legacyItalic> ≥ <legacyItalic>n</legacyItalic>;</para>
                    </listItem>
                  </list>
                </listItem>
                <listItem>
                  <para>a line starting with <legacyItalic>m</legacyItalic> <codeInline>`</codeInline> characters where <legacyItalic>m</legacyItalic> ≥ <legacyItalic>n</legacyItalic>.</para>
                </listItem>
              </list>
            </para>
          </content>
        </section>
        <section address="2. :">
          <title>2. <newTerm>Tilde Code Block</newTerm>:</title>
          <content>
            <para>
              <list class="ordered">
                <listItem>
                  <para>a line consisting of</para>
                  <list class="ordered">
                    <listItem>
                      <para>
                        <legacyItalic>n</legacyItalic> <codeInline>~</codeInline> characters where <legacyItalic>n</legacyItalic> ≥ 3, followed by,</para>
                    </listItem>
                    <listItem>
                      <para>optionally, a <legacyItalic>language</legacyItalic> value, followed by,</para>
                    </listItem>
                    <listItem>
                      <para>optionally, an attribute enclosure;</para>
                    </listItem>
                  </list>
                </listItem>
                <listItem>
                  <para>
                    <legacyItalic>fenced code</legacyItalic>, consisting of any number of lines, where each line</para>
                  <list class="ordered">
                    <listItem>
                      <para>does <legacyItalic>not</legacyItalic> start with <legacyItalic>l</legacyItalic> <codeInline>~</codeInline> characters where <legacyItalic>l</legacyItalic> ≥ <legacyItalic>n</legacyItalic>;</para>
                    </listItem>
                  </list>
                </listItem>
                <listItem>
                  <para>a line starting with <legacyItalic>m</legacyItalic> <codeInline>~</codeInline> characters where <legacyItalic>m</legacyItalic> ≥ <legacyItalic>n</legacyItalic>.</para>
                </listItem>
              </list>
            </para>
          </content>
        </section>
      </sections>
    </section>
    <section address="Examples">
      <title>Examples</title>
      <content />
      <sections>
        <section address="1. Backtick code block:">
          <title>1. Backtick code block:</title>
          <content>
            <code title="AMDL" language="none">
```
Backtick code block
```
</code>
          </content>
        </section>
        <section address="2. Tilde code block:">
          <title>2. Tilde code block:</title>
          <content>
            <code title="AMDL" language="none">
~~~
Tilde code block
~~~
</code>
          </content>
        </section>
      </sections>
    </section>
    <section address="Example Output">
      <title>Example Output</title>
      <content>
        <code language="none">
Backtick code block
</code>
        <code language="none">
Tilde code block
</code>
      </content>
    </section>
    <section address="Attributes">
      <title>Attributes</title>
      <content>
        <para>Fenced code blocks can be assigned attributes through <legacyItalic>attribute enclosures</legacyItalic> using the following syntax:</para>
        <para>
          <command>{#identifier .class1 .class2 name1="value1" name2="value2" ...}</command>
        </para>
        <para>The following attributes are defined:</para>
      </content>
      <sections>
        <section address="identifier">
          <title>
            <codeInline>identifier</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a string value used for resolving links to the block.
If no value is specified, a unique identifier will be derived from:</para>
                <list class="ordered">
                  <listItem>
                    <para>the value of the <link xlink:href="#title">title</link> attribute, or</para>
                  </listItem>
                  <listItem>
                    <para>the value of the <link xlink:href="#language">language</link> attribute, or</para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>code</codeInline>.</para>
                  </listItem>
                </list>
              </listItem>
            </list>
          </content>
        </section>
        <section address="class">
          <title>
            <codeInline>class</codeInline>
          </title>
          <content>
            <para>
              <list class="bullet">
                <listItem>
                  <para>
                    <codeInline>numberLines</codeInline> - equivalent to specifying <codeInline>true</codeInline> as the value of <link xlink:href="#numberLines"><codeInline>numberLines</codeInline></link>, or</para>
                </listItem>
                <listItem>
                  <para>language - equivalent to specifying the value of <link xlink:href="#language"><codeInline>language</codeInline></link>.</para>
                </listItem>
              </list>
            </para>
          </content>
        </section>
        <section address="language">
          <title>
            <codeInline>language</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>one of the following:</para>
                <list class="bullet">
                  <listItem>
                    <para>
                      <codeInline>C</codeInline>
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>C++</codeInline> or <codeInline>cpp</codeInline></para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>C#</codeInline> or <codeInline>CSharp</codeInline></para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>F#</codeInline> or <codeInline>FSharp</codeInline></para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>JavaScript</codeInline> or <codeInline>js</codeInline></para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>HTML</codeInline> or <codeInline>XML</codeInline> or <codeInline>XSL</codeInline></para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>PowerShell</codeInline>
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>Python</codeInline>
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>SQL</codeInline>
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeInline>VB.NET</codeInline>
                    </para>
                  </listItem>
                </list>
                <para>If no value is specified, the trailing content of the block's opening line shall be used.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="title">
          <title>
            <codeInline>title</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a string value to be used as the block's caption.
If no value is specified, the value of the <codeInline>language</codeInline> attribute shall be used.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="source">
          <title>
            <codeInline>source</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a string value specifying the path to the file the code block's content should be extracted from.
If a value is specified, the code block's contents shall be ignored.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="region">
          <title>
            <codeInline>region</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a string value specifying the name of the region the code block's content should be extracted from.
If no value is specified, the entire file contents shall be imported.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="noRegionMarkers">
          <title>
            <codeInline>noRegionMarkers</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a Boolean value indicating whether the <codeInline>#region</codeInline> and <codeInline>#endregion</codeInline> tags should be excluded from the extracted content.
If no value is specified, the <codeInline>#region</codeInline> and <codeInline>#endregion</codeInline> tags shall be included.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="tabSize">
          <title>
            <codeInline>tabSize</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>an integer value specifying the number of spaces that will be used for replacing tab characters in the code block.
If 0 or no value is specified, the language's default shall be used.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="numberLines">
          <title>
            <codeInline>numberLines</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a Boolean value indicating whether the lines in the code block should be numbered.
If no value is specified, the line numbers shall be excluded.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="outlining">
          <title>
            <codeInline>outlining</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a Boolean value indicating whether <codeInline>#region</codeInline> and <codeInline>#if</codeInline> blocks should be collapsible.
If no value is specified, region outlining shall be disabled.</para>
              </listItem>
            </list>
          </content>
        </section>
        <section address="keepSeeTags">
          <title>
            <codeInline>keepSeeTags</codeInline>
          </title>
          <content>
            <list class="nobullet">
              <listItem>
                <para>a Boolean value indicating whether <codeInline>see</codeInline> tags should be rendered as clickable links.
If no value is specified, the <codeInline>see</codeInline> tags shall be rendered as literal text.</para>
              </listItem>
            </list>
          </content>
        </section>
      </sections>
    </section>
    <section address="">
      <title>
        <newTerm>Nested Code Blocks</newTerm>
      </title>
      <content>
        <para>One or more nested blocks may be included in a fenced code block by using a different delimiter
(i.e., <codeInline>~</codeInline> if <codeInline>`</codeInline> was used in the enclosing block, and vice versa).
This allows importing code from multiple sources/regions into a single code block.</para>
      </content>
      <sections>
        <section address="Example">
          <title>Example</title>
          <content>
            <code title="AMDL" language="none">
```C#
~~~{source="Class1.cs"}
~~~
~~~{source="Class2.cs"}
~~~
```
</code>
          </content>
        </section>
        <section address="Example Output">
          <title>Example Output</title>
          <content>
            <code language="C#">
~~~{source="Class1.cs"}
~~~
~~~{source="Class2.cs"}
~~~
</code>
          </content>
        </section>
      </sections>
    </section>
    <section address="Differences from PM">
      <title>Differences from PM</title>
      <content>
        <list class="ordered">
          <listItem>
            <para>Nested code blocks are undefined in PM.</para>
          </listItem>
          <listItem>
            <para>Blank lines before or after fenced code block are not mandatory.</para>
          </listItem>
          <listItem>
            <para>The <codeInline>startFrom</codeInline> attribute is unsupported.</para>
          </listItem>
          <listItem>
            <para>
              <externalLink>
                <linkUri>http://pandoc.org/README.html#fenced-code-blocks</linkUri>
                <linkText>Pandoc's Markdown: Fenced Code Blocks</linkText>
              </externalLink> refers to tilde code blocks as <legacyItalic>fenced code blocks</legacyItalic>, while <legacyItalic>backtick code blocks</legacyItalic> are interpreted as a distinct element.
In practice, there are no syntactic or semantic differences between PM and AMDL.</para>
          </listItem>
        </list>
      </content>
    </section>
    <section address="amdl2maml Support">
      <title>amdl2maml Support</title>
      <content>
        <para>Partial, pending parser modification.</para>
      </content>
      <sections>
        <section address="Limitations">
          <title>Limitations</title>
          <content>
            <para>
              <list class="ordered">
                <listItem>
                  <para>Attributes are unsupported.</para>
                </listItem>
                <listItem>
                  <para>Nested code blocks are unsupported.</para>
                </listItem>
              </list>
            </para>
          </content>
        </section>
      </sections>
    </section>
    <relatedTopics>
      <link xlink:href="c811c110-0cb2-4737-abd7-3b3239ec3169" topicType_id="4a273212-0ac8-4d72-8349-ec11cd2ff8cd" />
      <link xlink:href="c620a7ed-7c50-4eab-864e-aaefe7725a6c" topicType_id="4a273212-0ac8-4d72-8349-ec11cd2ff8cd" />
      <link xlink:href="c7cd0e90-2bec-4560-931b-db492b7c7358" topicType_id="4a273212-0ac8-4d72-8349-ec11cd2ff8cd" />
      <externalLink>
        <linkUri>http://pandoc.org/README.html#fenced-code-blocks</linkUri>
        <linkText>Pandoc's Markdown: Fenced Code Blocks</linkText>
      </externalLink>
    </relatedTopics>
  </developerConceptualDocument>
</topic>